Student Answer: 

public virtual void addToEnd(int newValue)
	{
		while (next != null)
		{
			next = next.next;
		}
		next = new List(newValue);
		return;
	}

Fix: (1) List current = this;
     (2) while (current.next != null)
     (3) current = current.next;
     (4) current.next = new List(newValue);

Redundant: return; 

Assement:(1) Skips element and destroys list during iteration.
         (2) Student had a the right skeleton.

Solution: 

 public virtual void addToEnd(int newValue)
            {
                List current = this;
                while (current.next != null)
                {
                    current = current.next;
                }
                current.next = new List(newValue);
                return;
            }